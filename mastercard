import random
from random import randint
import datetime
import requests
import json
from os import system

print("\033[1;32m[\033[1;33m#\033[1;32m]\033[1;36mCargando 22 BINNERS % \033[1;37m")
print("")
system("sleep 3")

bin_format = "5xxxxxxxxxxx"

def esValido(num_tarjeta):
  suma = 0
  num_digitos = len(num_tarjeta)
  pos_par_impar = num_digitos & 1

  for i in range(0, num_digitos):
    digito = int(num_tarjeta[i])
    if not ((i & 1) ^ pos_par_impar):
      digito = digito * 2
    if digito > 9:
      digito = digito - 9
    suma = suma + digito

  return (suma % 10 == 0)

def generar_cc(bin_format):
  cc = ""
  if len(bin_format) == 12:
    for i in range(11):
      if bin_format[i] in ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"):
        cc += bin_format[i]
        continue
      elif bin_format[i] == "x":
        cc += str(randint(0, 9))
      else:
        print("\nCaracter no valido en el formato: {}\n".format(bin_format))
        print("El formato del bin es: xxxxxxxxxxxxxxxx de 16 digitos\n")
        sys.exit()

    for i in range(10):
      verificador = cc + str(i)
      if esValido(verificador):
        cc = verificador
        break
      else:
        verificador = cc
                                                                                                                                               
  else:
    print("\nERROR: Inserte un bin válido\n")                                                                                                    
    print("SOLUCIÓN: El formato del bin es: xxxxxxxxxxxxxxxx de 16 dígitos\n")
    sys.exit()

  return cc                                                                                                                                   

def dategen():
  now = datetime.datetime.now()
  date = ""
  month = str(randint(1, 9))
  current_year = str(now.year)
  year = str(randint(int(current_year[-2:]) + 1, int(current_year[-2:]) + 6))
  date = month + "/" + year

  return date

  dategen()

def main():
 for i in range(int(22)):
   cc = generar_cc(bin_format)
   print("============================")
   print(f"\033[1;34mBIN : \033[1;37m{cc}xxxx")
   print(f"\033[1;34mFECHA : \033[1;37m{dategen()}")
   print("\033[1;34mCVV   : \033[1;37mgnd")
   bin = (cc)

   r = requests.get("https://bin-checker.net/api/" + bin)
   json = r.json()
   country = json["country"]
   pais = country["name"]
   print("\033[1;34mPAIS  :\033[1;37m", pais)
   print("============================")
   print("")
main()

print("")
print("\033[1;36m/*Nota: \033[1;37mpara saber el nivel del bin")
print(" \033[1;37m usa \033[1;33mCHECK-INFO \033[1;37m(esta en mi \033[1;34mgithub\033[1;37m)")

